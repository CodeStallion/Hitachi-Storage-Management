package com.hitachi.hibernate.entities;

import com.hitachi.objects.ParseElement;

// Generated Dec 16, 2011 4:19:34 AM by Hibernate Tools 3.4.0.CR1

/**
 * Logicalunit generated by hbm2java
 */
public class Logicalunit implements java.io.Serializable {

	private LogicalunitId id;
	private int arrayGroup;
	private String arrayGroupName;
	private int capacityInKb;
	private int chassis;
	private boolean commandDevice;
	private int commandDeviceEx;
	private boolean commandDeviceSecurity;
	private int consumedCapacityInKb;
	private int currentPortController;
	private int defaultPortController;
	private int devCount;
	private String devType;
	private boolean differentialManagement;
	private int dpPoolId;
	private int dpType;
	private String emulation;
	private int externalVolume;
	private int isComposite;
	private boolean path;
	private String quickShadowVolumeType;
	private String raidType;
	private String shadowImageVolumeType;
	private int sysVolFlag;
	private int tcaPoolId;
	private int threshold;
	private String trueCopyVolumeType;
	private int universalReplicatorPoolId;
	private String universalReplicatorVolumeType;

	public Logicalunit() {
	}

	public Logicalunit(LogicalunitId id, int arrayGroup, String arrayGroupName,
			int capacityInKb, int chassis, boolean commandDevice,
			int commandDeviceEx, boolean commandDeviceSecurity,
			int consumedCapacityInKb, int currentPortController,
			int defaultPortController, int devCount, String devType,
			boolean differentialManagement, int dpPoolId, int dpType,
			String emulation, int externalVolume, int isComposite,
			boolean path, String quickShadowVolumeType, String raidType,
			String shadowImageVolumeType, int sysVolFlag, int tcaPoolId,
			int threshold, String trueCopyVolumeType,
			int universalReplicatorPoolId, String universalReplicatorVolumeType) {
		this.id = id;
		this.arrayGroup = arrayGroup;
		this.arrayGroupName = arrayGroupName;
		this.capacityInKb = capacityInKb;
		this.chassis = chassis;
		this.commandDevice = commandDevice;
		this.commandDeviceEx = commandDeviceEx;
		this.commandDeviceSecurity = commandDeviceSecurity;
		this.consumedCapacityInKb = consumedCapacityInKb;
		this.currentPortController = currentPortController;
		this.defaultPortController = defaultPortController;
		this.devCount = devCount;
		this.devType = devType;
		this.differentialManagement = differentialManagement;
		this.dpPoolId = dpPoolId;
		this.dpType = dpType;
		this.emulation = emulation;
		this.externalVolume = externalVolume;
		this.isComposite = isComposite;
		this.path = path;
		this.quickShadowVolumeType = quickShadowVolumeType;
		this.raidType = raidType;
		this.shadowImageVolumeType = shadowImageVolumeType;
		this.sysVolFlag = sysVolFlag;
		this.tcaPoolId = tcaPoolId;
		this.threshold = threshold;
		this.trueCopyVolumeType = trueCopyVolumeType;
		this.universalReplicatorPoolId = universalReplicatorPoolId;
		this.universalReplicatorVolumeType = universalReplicatorVolumeType;
	}

	public LogicalunitId getId() {
		return this.id;
	}

	public void setId(LogicalunitId id) {
		this.id = id;
	}

	public int getArrayGroup() {
		return this.arrayGroup;
	}

	public void setArrayGroup(int arrayGroup) {
		this.arrayGroup = arrayGroup;
	}

	public String getArrayGroupName() {
		return this.arrayGroupName;
	}

	public void setArrayGroupName(String arrayGroupName) {
		this.arrayGroupName = arrayGroupName;
	}

	public int getCapacityInKb() {
		return this.capacityInKb;
	}

	public void setCapacityInKb(int capacityInKb) {
		this.capacityInKb = capacityInKb;
	}

	public int getChassis() {
		return this.chassis;
	}

	public void setChassis(int chassis) {
		this.chassis = chassis;
	}

	public boolean isCommandDevice() {
		return this.commandDevice;
	}

	public void setCommandDevice(boolean commandDevice) {
		this.commandDevice = commandDevice;
	}

	public int getCommandDeviceEx() {
		return this.commandDeviceEx;
	}

	public void setCommandDeviceEx(int commandDeviceEx) {
		this.commandDeviceEx = commandDeviceEx;
	}

	public boolean isCommandDeviceSecurity() {
		return this.commandDeviceSecurity;
	}

	public void setCommandDeviceSecurity(boolean commandDeviceSecurity) {
		this.commandDeviceSecurity = commandDeviceSecurity;
	}

	public int getConsumedCapacityInKb() {
		return this.consumedCapacityInKb;
	}

	public void setConsumedCapacityInKb(int consumedCapacityInKb) {
		this.consumedCapacityInKb = consumedCapacityInKb;
	}

	public int getCurrentPortController() {
		return this.currentPortController;
	}

	public void setCurrentPortController(int currentPortController) {
		this.currentPortController = currentPortController;
	}

	public int getDefaultPortController() {
		return this.defaultPortController;
	}

	public void setDefaultPortController(int defaultPortController) {
		this.defaultPortController = defaultPortController;
	}

	public int getDevCount() {
		return this.devCount;
	}

	public void setDevCount(int devCount) {
		this.devCount = devCount;
	}

	public String getDevType() {
		return this.devType;
	}

	public void setDevType(String devType) {
		this.devType = devType;
	}

	public boolean isDifferentialManagement() {
		return this.differentialManagement;
	}

	public void setDifferentialManagement(boolean differentialManagement) {
		this.differentialManagement = differentialManagement;
	}

	public int getDpPoolId() {
		return this.dpPoolId;
	}

	public void setDpPoolId(int dpPoolId) {
		this.dpPoolId = dpPoolId;
	}

	public int getDpType() {
		return this.dpType;
	}

	public void setDpType(int dpType) {
		this.dpType = dpType;
	}

	public String getEmulation() {
		return this.emulation;
	}

	public void setEmulation(String emulation) {
		this.emulation = emulation;
	}

	public int getExternalVolume() {
		return this.externalVolume;
	}

	public void setExternalVolume(int externalVolume) {
		this.externalVolume = externalVolume;
	}

	public int getIsComposite() {
		return this.isComposite;
	}

	public void setIsComposite(int isComposite) {
		this.isComposite = isComposite;
	}

	public boolean isPath() {
		return this.path;
	}

	public void setPath(boolean path) {
		this.path = path;
	}

	public String getQuickShadowVolumeType() {
		return this.quickShadowVolumeType;
	}

	public void setQuickShadowVolumeType(String quickShadowVolumeType) {
		this.quickShadowVolumeType = quickShadowVolumeType;
	}

	public String getRaidType() {
		return this.raidType;
	}

	public void setRaidType(String raidType) {
		this.raidType = raidType;
	}

	public String getShadowImageVolumeType() {
		return this.shadowImageVolumeType;
	}

	public void setShadowImageVolumeType(String shadowImageVolumeType) {
		this.shadowImageVolumeType = shadowImageVolumeType;
	}

	public int getSysVolFlag() {
		return this.sysVolFlag;
	}

	public void setSysVolFlag(int sysVolFlag) {
		this.sysVolFlag = sysVolFlag;
	}

	public int getTcaPoolId() {
		return this.tcaPoolId;
	}

	public void setTcaPoolId(int tcaPoolId) {
		this.tcaPoolId = tcaPoolId;
	}

	public int getThreshold() {
		return this.threshold;
	}

	public void setThreshold(int threshold) {
		this.threshold = threshold;
	}

	public String getTrueCopyVolumeType() {
		return this.trueCopyVolumeType;
	}

	public void setTrueCopyVolumeType(String trueCopyVolumeType) {
		this.trueCopyVolumeType = trueCopyVolumeType;
	}

	public int getUniversalReplicatorPoolId() {
		return this.universalReplicatorPoolId;
	}

	public void setUniversalReplicatorPoolId(int universalReplicatorPoolId) {
		this.universalReplicatorPoolId = universalReplicatorPoolId;
	}

	public String getUniversalReplicatorVolumeType() {
		return this.universalReplicatorVolumeType;
	}

	public void setUniversalReplicatorVolumeType(
			String universalReplicatorVolumeType) {
		this.universalReplicatorVolumeType = universalReplicatorVolumeType;
	}
	
	public void populate(ParseElement pElem){
		
		LogicalunitId lid = new LogicalunitId();
		lid.setObjectId(pElem.getAttribute().get("objectID"));
		lid.setDevNum(Integer.parseInt(pElem.getAttribute().get("devNum")));
		lid.setDisplayName(pElem.getAttribute().get("displayName"));
		this.setId(lid);
		this.setArrayGroup(Integer.parseInt(pElem.getAttribute().get("arrayGroup")));
		this.setArrayGroupName(pElem.getAttribute().get("arrayGroupName"));
		this.setCapacityInKb(Integer.parseInt(pElem.getAttribute().get("capacityInKB")));
		this.setChassis(Integer.parseInt(pElem.getAttribute().get("chassis")));
		this.setCommandDevice(Boolean.parseBoolean(pElem.getAttribute().get("commandDevice")));
		this.setCommandDeviceEx(Integer.parseInt(pElem.getAttribute().get("commandDeviceEx")));
		this.setCommandDeviceSecurity(Boolean.parseBoolean(pElem.getAttribute().get("commandDeviceSecurity")));
		this.setConsumedCapacityInKb(Integer.parseInt(pElem.getAttribute().get("consumedCapacityInKB")));
		this.setCurrentPortController(Integer.parseInt(pElem.getAttribute().get("currentPortController")));
		this.setDefaultPortController(Integer.parseInt(pElem.getAttribute().get("defaultPortController")));
		this.setDevCount(Integer.parseInt(pElem.getAttribute().get("devCount")));
		this.setDevType(pElem.getAttribute().get("devType"));
		this.setDifferentialManagement(Boolean.parseBoolean(pElem.getAttribute().get("differentialManagement")));
		this.setDpPoolId(Integer.parseInt(pElem.getAttribute().get("dpPoolID")));
		this.setDpType(Integer.parseInt(pElem.getAttribute().get("dpType")));
		this.setEmulation(pElem.getAttribute().get("emulation"));
		this.setExternalVolume(Integer.parseInt(pElem.getAttribute().get("externalVolume")));
		this.setIsComposite(Integer.parseInt(pElem.getAttribute().get("isComposite")));
		this.setPath(Boolean.parseBoolean(pElem.getAttribute().get("path")));
		this.setQuickShadowVolumeType(pElem.getAttribute().get("quickShadowVolumeType"));
		this.setRaidType(pElem.getAttribute().get("raidType"));
		this.setShadowImageVolumeType(pElem.getAttribute().get("shadowImageVolumeType"));
		this.setSysVolFlag(Integer.parseInt(pElem.getAttribute().get("sysVolFlag")));
		this.setTcaPoolId(Integer.parseInt(pElem.getAttribute().get("tcaPoolID")));
		this.setThreshold(Integer.parseInt(pElem.getAttribute().get("threshold")));
		this.setTrueCopyVolumeType(pElem.getAttribute().get("trueCopyVolumeType"));
		this.setUniversalReplicatorPoolId(Integer.parseInt(pElem.getAttribute().get("universalReplicatorPoolID")));
		this.setUniversalReplicatorVolumeType(pElem.getAttribute().get("universalReplicatorVolumeType"));
	}
}
